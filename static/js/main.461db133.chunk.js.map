{"version":3,"sources":["Images.jsx","Loading.jsx","App.js","index.js"],"names":["Images","likes","image","userImg","updatedAt","className","src","alt","Loading","API","process","baseUrl","searchUrl","App","useState","images","setImages","loading","setLoading","page","setPage","term","setTerm","fetchImages","a","console","log","finalUrl","fetch","res","json","data","results","useEffect","event","window","addEventListener","finalScroll","scrollY","innerHeight","bodyHeight","document","body","scrollHeight","pageYOffset","documentElement","scrollTop","old","removeEventListener","show","length","map","item","index","small","urls","user","updated_at","details","profile_image","medium","Date","toLocaleDateString","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","ReactDOM","render","getElementById"],"mappings":"gOAEe,SAASA,EAAT,GAAuD,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACtD,OACE,sBAAKC,UAAU,MAAf,UACE,qBACEC,IAAKJ,EAILK,IAAI,MAEN,sBAAKF,UAAU,OAAf,UACE,qBAAKC,IAAKH,EAASI,IAAI,MACvB,+BAAOH,IACP,wCAAWH,WCbJ,SAASO,IACtB,OACE,qBAAKH,UAAU,UAAf,SACE,+CCAN,IAAMI,EAAG,qBAAiBC,+CACpBC,EAAU,mCACVC,EAAY,0CAgIHC,MA9Hf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGWJ,mBAAS,GAHpB,mBAGNK,EAHM,KAGAC,EAHA,OAIWN,mBAAS,IAJpB,mBAINO,EAJM,KAIAC,EAJA,cAMEC,IANF,2EAMb,gCAAAC,EAAA,6DACEN,GAAW,GACXO,QAAQC,IAAIP,EAAME,GAEdM,EAJN,UAIoBhB,GAJpB,OAI8BF,EAJ9B,iBAI0CU,GAE3B,KAATE,IACFM,EAAQ,UAAMf,GAAN,OAAkBH,EAAlB,iBAA8BU,EAA9B,kBAA4CE,IAPxD,kBAWsBO,MAAMD,GAX5B,cAWUE,EAXV,iBAYuBA,EAAIC,OAZ3B,QAYUC,EAZV,OAcQZ,EAAO,GAAc,KAATE,GACdL,EAAU,GAAD,mBAAKD,GAAL,YAAgBgB,KACzBN,QAAQC,IAAI,cACHP,EAAO,IAAc,IAATE,GACrBL,EAAU,GAAD,mBAAKD,GAAL,YAAgBgB,EAAKC,WAC9BP,QAAQC,IAAI,oBACM,KAATL,GAAwB,IAATF,GACxBH,EAAUe,EAAKC,SACfP,QAAQC,IAAI,iBAEZV,EAAUe,GACVN,QAAQC,IAAI,YAGdR,GAAW,GA5Bf,kDA8BIO,QAAQC,IAAR,MACAR,GAAW,GA/Bf,2DANa,sBA+Cbe,qBAAU,WACRV,MACC,CAACJ,IAEJc,qBAAU,WACR,IAAMC,EAAQC,OAAOC,iBAAiB,UAAU,WAC9C,IAAIC,EAAcF,OAAOG,QAAUH,OAAOI,YACtCC,EAAaC,SAASC,KAAKC,aAAe,GAGrCR,OAAOS,aAAeH,SAASI,gBAAgBC,WADpC,IAIF,IAAZ7B,GAAqBoB,GAAeG,GACtCpB,GAAQ,SAAC2B,GACP,OAAOA,EAAM,QAQrB,OAAOZ,OAAOa,oBAAoB,SAAUd,KAC3C,IAEH,IAAIe,EACgB,IAAlBlC,EAAOmC,OACLjC,EACE,cAACT,EAAD,IAEA,oBAAIH,UAAU,QAAd,uGAMFU,EAAOoC,KAAI,SAACC,EAAMC,GAAW,IAEzBpD,EAMEmD,EANFnD,MACQqD,EAKNF,EALFG,KAAQD,MAHgB,EAQtBF,EAJFI,KACEC,EALsB,EAKtBA,WAKEC,EAAU,CACdzD,QACAC,MAAOoD,EACPnD,QAbwB,EAMtBwD,cAAiBC,OAQnBxD,UAAW,IAAIyD,KAAKJ,GAAYK,sBAGlC,OAAO,cAAC9D,EAAD,eAAwB0D,GAAXL,MAI1B,OACE,sBAAKhD,UAAU,YAAf,UACE,iCACE,uBAAM0D,SAnEZ,SAAsBC,GACpBA,EAAEC,iBACF7C,EAAQ,GACRG,KAgEI,UACE,uBACE2C,KAAK,OACLC,YAAY,eACZC,MAAO/C,EACPgD,SAAU,SAACL,GACT1C,EAAQ0C,EAAEM,OAAOF,UAGrB,wBAAQF,KAAK,SAAb,yBAGJ,sBAAM7D,UAAU,OAAhB,SAAwB4C,IACvBhC,GAAW,cAACT,EAAD,QC9HlB+D,IAASC,OAAO,cAAC,EAAD,IAAS/B,SAASgC,eAAe,W","file":"static/js/main.461db133.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Images({ likes, image, userImg, updatedAt }) {\r\n  return (\r\n    <div className=\"img\">\r\n      <img\r\n        src={image}\r\n        // src={`https://source.unsplash.com/random/30${Math.floor(\r\n        //   Math.random() * 5\r\n        // )}*30${Math.floor(Math.random() * 5)}`}\r\n        alt=\"s\"\r\n      />\r\n      <div className=\"info\">\r\n        <img src={userImg} alt=\"s\" />\r\n        <span>{updatedAt}</span>\r\n        <p>Likes: {likes}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h2>Loading....</h2>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Images from \"./Images\";\nimport { useState, useEffect } from \"react\";\nimport Loading from \"./Loading\";\n\nconst API = `?client_id=${process.env.REACT_APP_UNSPLASH_API}`;\nconst baseUrl = \"https://api.unsplash.com/photos/\";\nconst searchUrl = \"https://api.unsplash.com/search/photos/\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [term, setTerm] = useState(\"\");\n\n  async function fetchImages() {\n    setLoading(true);\n    console.log(page, term);\n\n    let finalUrl = `${baseUrl}${API}&page=${page}`;\n\n    if (term !== \"\") {\n      finalUrl = `${searchUrl}${API}&page=${page}&query=${term}`;\n    }\n\n    try {\n      const res = await fetch(finalUrl);\n      const data = await res.json();\n\n      if (page > 0 && term === \"\") {\n        setImages([...images, ...data]);\n        console.log(\"no search\");\n      } else if (page > 0 && term !== false) {\n        setImages([...images, ...data.results]);\n        console.log(\"page > 0 search\");\n      } else if (term !== \"\" && page === 0) {\n        setImages(data.results);\n        console.log(\"only search\");\n      } else {\n        setImages(data);\n        console.log(\"default\");\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setPage(0);\n    fetchImages();\n  }\n\n  useEffect(() => {\n    fetchImages();\n  }, [page]);\n\n  useEffect(() => {\n    const event = window.addEventListener(\"scroll\", () => {\n      let finalScroll = window.scrollY + window.innerHeight;\n      let bodyHeight = document.body.scrollHeight - 3;\n\n      let lastScrollTop = 0;\n      let st = window.pageYOffset || document.documentElement.scrollTop;\n\n      if (st > lastScrollTop) {\n        if (loading === false && finalScroll >= bodyHeight) {\n          setPage((old) => {\n            return old + 1;\n          });\n        }\n      } else {\n        // upscroll code\n      }\n    });\n\n    return window.removeEventListener(\"scroll\", event);\n  }, []);\n\n  let show =\n    images.length === 0 ? (\n      loading ? (\n        <Loading />\n      ) : (\n        <h4 className=\"error\">\n          403 Error!! The Request limit to unsplash API is 50 per hour, Please\n          reload after 50 min.\n        </h4>\n      )\n    ) : (\n      images.map((item, index) => {\n        const {\n          likes,\n          urls: { small },\n          user: {\n            updated_at,\n            profile_image: { medium },\n          },\n        } = item;\n\n        const details = {\n          likes,\n          image: small,\n          userImg: medium,\n          updatedAt: new Date(updated_at).toLocaleDateString(),\n        };\n\n        return <Images key={index} {...details} />;\n      })\n    );\n\n  return (\n    <div className=\"container\">\n      <header>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Search image\"\n            value={term}\n            onChange={(e) => {\n              setTerm(e.target.value);\n            }}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n      </header>\n      <main className=\"grid\">{show}</main>\n      {loading && <Loading />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}